{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\fmodern\fcharset238\fprq1 Courier New CE;}
{\f45\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f47\fmodern\fcharset161\fprq1 Courier New Greek;}{\f48\fmodern\fcharset162\fprq1 Courier New Tur;}{\f49\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f50\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f51\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\title Sample run of SYM using SYMDOS2 this example shows}
{\author Dallas Shell}{\operator Dallas Shell}{\creatim\yr2003\mo11\dy16\hr21\min9}{\revtim\yr2003\mo11\dy16\hr21\min9}{\version2}{\edmins0}{\nofpages8}{\nofwords2080}{\nofchars11856}{\nofcharsws14560}{\vern8247}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind5\viewscale90\viewzk2\htmautsp\nolnhtadjtbl\lnbrkrule \fet0\sectd 
\linex0\endnhere\pgbrdropt32\sectlinegrid360\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\fs28 Sample run of SYM using SYMDOS2 this example shows
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 how well integrated with other programs the DOS is.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 Bold larger size type are my comments about 
\par operation and smaller type is the actual SYM
\par to Terminal input-output. I have slightly modified the 
\par terminal output to allow room for my comments
\par 
\par Terminal used was IBM PC using HyperTerminal connected
\par to SYM at 4800-8-N-1 with VT100 configuration.
\par 
\par 
\par 
\par Pressed RESET button on SYM
\par Pressed Q on terminal to lon on to SYM, 
\par SYM gave period as prompt
\par 
\par 
\par Link to DOS with g9003 everything else shown
\par to next comment is done automatically because the 
\par disk IDSECTOR has been modified to automatically 
\par issue commands to start RAE and SET up memory 
\par boundries as talked about in the notes on 
\par using the IDsector on the disk.
\par }{\f2\fs20 
\par .g 9003
\par .G B000 
\par RAE V1.0
\par COPYRIGHT 1979 SYNERTEK SYSTEMS CORP. 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 0200-0BFC  0C00-0EFC  0F00
\par 0200  0C00
\par >SE $1000 $5000 $5003 $6EFC $6F00 
\par 1000-5000  5003-6EFC  6F00
\par 0200  0C00
\par >CL 
\par >SET 
\par 1000-5000  5003-6EFC  6F00
\par 1000  0C00
\par >
\par 
\par }{\b\f2\fs28 All of the above was done automatically.
\par This saves a lot of typing to start RAE
\par and modify the SET boundries to my memory
\par configuration.  I always start RAE from disk
\par this way when I will be using RAE.  Other startup
\par disks could be made to start BASIC, FORTH etc or
\par you could start a data collection program that would
\par log data to disk etc.
\par 
\par Here I ask for disk directory of disk 0 from RAE}{\f2\fs20 
\par 
\par >DC DIR 0 
\par FMT&CPY OBJ 0200-086F :IDSECT  RAE 0200-08DA :
\par IDSECT  MY  1000-1716 :
\par >
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 Here I ask for disk directory of disk 1 from RAE
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 Note format of listing.}{\f2\fs20 
\par 
\par >DC DIR 1 
\par 1541DOS RAE 0200-3F24 :1541DOS OBJ 7000-7C74 :
\par E2716   OBJ 0400-07A1 :CAT     COM 0200-0534 :
\par FMT&CPY OBJ 0200-086F :E2716   RAE 1000-2814 :
\par M957    RAE 0200-04B3 :MX80    RAE 0200-046C :
\par E2532   RAE 2000-3894 :E2532   OBJ 0400-079A :
\par E2764   RAE 2000-3A27 :E2764   OBJ 0400-07F6 :
\par GETAIM  RAE 1000-15A9 :GETAIM  OBJ 0400-0462 :
\par MX80    OBJ 7000-7057 :R322311 EPM 1000-1FFF :
\par MATHPACKEPM 1000-1FFF :ERSOBIOSEPM 1000-2FFF :
\par NSM4005 RAE 0200-048D :4THZ26  EPM 1000-1FFF :
\par PL65Z25 EPM 1000-1FFF :PL65Z26 EPM 1000-1FFF :
\par R3222   EPM 1000-1FFF :R3224   EPM 1000-1FFF :
\par R322511 EPM 1000-1FFF :R322611 EPM 1000-1FFF :
\par 4THZ25  EPM 1000-1FFF :
\par >
\par 
\par }{\b\f2\fs28 Now I want to go to the MONITOR so, 
\par I press CTRL C on the terminal keyboard}{\f2\fs20 
\par 
\par >^C
\par B0AC,0
\par .\tab \tab \tab \tab }{\b\f2\fs28 SYM responds with . prompt}{\f2\fs20 
\par .L3  CAT.COM,1 \tab \tab }{\b\f2\fs28 I now load program CAT.COM from disk 1
\par \tab \tab \tab \tab Notice this is a new L3 type command
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 \tab \tab \tab \tab that has been linked to the Monitor
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 \tab \tab \tab \tab command set by the DOS linkup.
\par }{\f2\fs20 
\par 
\par .\tab \tab \tab \tab }{\b\f2\fs28 CAT program is loaded prompt given
\par }{\f2\fs20 
\par .G 200\tab \tab \tab }{\b\f2\fs28 I run cat program at 200 I knew where to
\par \tab \tab \tab \tab run by looking at directory listing that 
\par \tab \tab \tab \tab shows were code was stored (200-534)  I knew
\par \tab \tab \tab \tab It was object code by the naming convention, ie 
\par \tab \tab \tab \tab com or obj
\par 
\par \tab \tab \tab \tab Now here is output from the CAT program.  Note
\par \tab \tab \tab \tab directory output is sorted and shows more detail.
\par \tab \tab \tab \tab It is also in alpha one column width.}{\f2\fs20 
\par CATALOG V1.0
\par filename,unit -> *.*,1\tab }{\b\f2\fs28 I enter *.* as name and 1 for disk 1}{\f2\fs20 
\par 
\par      FILENAME        EXT BLK  ADDRESS
\par   1541DOS  OBJ  R/W  1  005 7000-7C74
\par   1541DOS  RAE  R/W  2  021 0200-3F24
\par   4THZ25   EPM  R/W  1  006 1000-1FFF
\par   4THZ26   EPM  R/W  1  006 1000-1FFF
\par   CAT      COM  R/W  1  002 0200-0534
\par   E2532    OBJ  R/W  1  002 0400-079A
\par   E2532    RAE  R/W  1  009 2000-3894
\par   E2716    OBJ  R/W  1  002 0400-07A1
\par   E2716    RAE  R/W  1  009 1000-2814
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20   E2764    OBJ  R/W  1  002 0400-07F6
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20   E2764    RAE  R/W  1  009 2000-3A27
\par   ERSOBIOS EPM  R/W  1  011 1000-2FFF
\par   FMT&CPY  OBJ  R/W  1  003 0200-086F
\par   GETAIM   OBJ  R/W  1  001 0400-0462
\par   GETAIM   RAE  R/W  1  002 1000-15A9
\par   M957     RAE  R/W  1  001 0200-04B3
\par   MATHPACK EPM  R/W  1  006 1000-1FFF
\par   MX80     OBJ  R/W  1  001 7000-7057
\par   MX80     RAE  R/W  1  001 0200-046C
\par   NSM4005  RAE  R/W  1  001 0200-048D
\par   PL65Z25  EPM  R/W  1  006 1000-1FFF
\par   PL65Z26  EPM  R/W  1  006 1000-1FFF
\par   R3222    EPM  R/W  1  006 1000-1FFF
\par   R322311  EPM  R/W  1  006 1000-1FFF
\par   R3224    EPM  R/W  1  006 1000-1FFF
\par   R322511  EPM  R/W  1  006 1000-1FFF
\par   R322611  EPM  R/W  1  006 1000-1FFF
\par 27 file(s) occupy 142 block(s)
\par 059 block(s) unoccupied
\par 
\par .\tab \tab \tab \tab }{\b\f2\fs28 Program finished, control goes back
\par \tab \tab \tab \tab to monitor, monitor issues prompt}{\f2\fs20 
\par .G B003 \tab \tab \tab }{\b\f2\fs28 Now to restart RAE, we issue a 
\par \tab \tab \tab \tab g B003 to warm start RAE, everything
\par \tab \tab \tab \tab in RAE is unchanged.
\par }{\f2\fs20 
\par 1000-5000  5003-6EFC  6F00
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 1000  0C00
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 >LO GETAIM.RAE 1 \tab \tab }{\b\f2\fs28 Load source code file from disk 1
\par }{\f2\fs20 
\par >
\par >PR\tab \tab \tab \tab }{\b\f2\fs28 List RAE buffer sample file
\par }{\f2\fs20 
\par  0005             ;GETAIM.RAE 1-2-2003
\par  0010             ;THIS PROGRAM WILL RECEIVE 4K CHARACTERS FROM
\par  0020             ;THE AUX RS232 PORT AND STORE THE DATA INTO THE
\par  0030             ;BUFFER AT $1000 THRU $1FFF
\par  0035             ;THIS PROGRAM WAS WRITTEN TO RECEIVE EPROM FILES
\par  0036             ;FROM AN IBM PC DISK FILE 
\par  0040             ;
\par  0050             .OS
\par  0060             .BA $0400
\par  0260             ;
\par  0270  BPTR.L     .DE $E0
\par  0280  BPTR.H     .DE $E1
\par  0290  ENDPAGE    .DE $E2
\par  0330             ;
\par  0340             ;
\par  0730             ;
\par  1450             ;
\par  1451  START      JSR CONFIG
\par  1455             LDY #$00
\par  1460  COPY       LDX #$00     ;COPY EPROM CONTENTS INTO RAM BUF
\par  1480  COPYMORE   JSR INCHR
\par  1500             STA (BPTR.L),Y       ;TO RAM BUFFER
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  1510             JSR INCADDR  ;NEXT
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  1520             BCS COPYMORE
\par  1530             RTS
\par  1540             ;
\par  2070  CONFIG     LDA #$00     ;INITIALIZE BUFFER POINTER
\par  2080             TAY
\par  2090             STA BPTR.L   ;BUFFER FROM $1000 - $1FFF
\par  2100             CLC
\par  2110             LDA #$10
\par  2120             STA BPTR.H   ;START BUFFER AT $1000
\par  2130             ADC #$10     ;ADD 4K TO IT
\par  2140             STA ENDPAGE  ;REMEMBER LAST PAGE
\par  2145             JSR INIT
\par  2150             RTS
\par  2160             ;
\par  2170             ;
\par  2450             ;
\par  2460  INCADDR    INC BPTR.L   ;INC BUFFER POINTER
\par  2470             BNE NOTFIN   ;RET WITH C = 1 IF NOT THRU
\par  2480             INC BPTR.H
\par  2490             LDA BPTR.H
\par  2500             CMP ENDPAGE
\par  2510             BNE NOTFIN
\par  2520             CLC  ;RET WITH C = 0 IF FINISHED
\par  2530             RTS
\par  2540             ;
\par  2550  NOTFIN     SEC  ;RET WITH C = 1 IF NOT THRU
\par  2560             RTS
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  2570             ;
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  3290  ; R6551 ACIA DRIVER 4-2-86
\par  3300  ;
\par  3310  ;
\par  3320  DATAR      .DE $F300
\par  3330  STATUS     .DE DATAR+1
\par  3340  CMD        .DE DATAR+2
\par  3350  CONT       .DE DATAR+3
\par  3360  ;
\par  3370  ;
\par  3400  ;
\par  3410  ;
\par  3430  INCHR      LDA STATUS
\par  3440             AND #$40     ;CK DSR* MUST BE -V
\par  3490  RDRE       LDA STATUS
\par  3500             AND #$08     ;WAIT FOR CHR
\par  3510             BEQ RDRE
\par  3520             LDA DATAR    ;GET CHR
\par  3530             RTS
\par  3540  ;
\par  3550  ;
\par  3560  OUTCH      PHA
\par  3580  TDRE       LDA STATUS
\par  3590             AND #$10
\par  3600             BEQ TDRE     ;WAIT FOR TX EMPTY
\par  3610             PLA
\par  3620             STA DATAR    ;SEND IT
\par  3630             RTS
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  3640  ;
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20  3650  ;
\par  3710  ;
\par  3720  ;
\par  3730  INIT       LDA #$0B     ;N PAR, NO INT
\par  3740             STA CMD      ;DTR=L RTS=L
\par  3750             LDA #$1C     ;1 SB 8 BIT INT CLK
\par  3760             STA CONT     ;4800 BAUD
\par  3770             RTS
\par  3780  ;
\par  3790  ;
\par  3800             .EN
\par //
\par 
\par >\tab \tab \tab \tab }{\b\f2\fs28 RAE finishes and gives prompt
\par }{\f2\fs20 
\par >^C\tab \tab \tab \tab }{\b\f2\fs28 Issue CTRL C to break to monitor
\par }{\f2\fs20 
\par B0AC,0
\par .\tab \tab \tab \tab }{\b\f2\fs28 Monitor responds}{\f2\fs20 
\par 
\par .G 200 \tab \tab \tab }{\b\f2\fs28 Run catalog program again (it is still in memory)}{\f2\fs20 
\par CATALOG V1.0
\par filename,unit -> *.*,0     FILENAME        EXT BLK  ADDRESS
\par   FMT&CPY  OBJ  R/W  1  003 0200-086F
\par   IDSECT   MY   R/W  1  003 1000-1716
\par   IDSECT   RAE  R/W  1  003 0200-08DA
\par 3 file(s) occupy 009 block(s)
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 192 block(s) unoccupied
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 
\par .G B003 \tab \tab \tab }{\b\f2\fs28 Warm start RAE
\par }{\f2\fs20 
\par 1000-5000  5003-6EFC  6F00
\par 15A7  0C00
\par >\tab \tab \tab \tab 
\par 
\par >PR 0 300  \tab \tab \tab }{\b\f2\fs28 Print lines 0 thru 300 to show RAE
\par \tab \tab \tab \tab information unchanged}{\f2\fs20 
\par  
\par  0005             ;GETAIM.RAE 1-2-2003
\par  0010             ;THIS PROGRAM WILL RECEIVE 4K CHARACTERS FROM
\par  0020             ;THE AUX RS232 PORT AND STORE THE DATA INTO THE
\par  0030             ;BUFFER AT $1000 THRU $1FFF
\par  0035             ;THIS PROGRAM WAS WRITTEN TO RECEIVE EPROM FILES
\par  0036             ;FROM AN IBM PC DISK FILE 
\par  0040             ;
\par  0050             .OS
\par  0060             .BA $0400
\par  0260             ;
\par  0270  BPTR.L     .DE $E0
\par  0280  BPTR.H     .DE $E1
\par  0290  ENDPAGE    .DE $E2
\par //
\par 
\par 
\par >CL \tab \tab \tab \tab }{\b\f2\fs28 Clear RAE 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 >PR //\tab \tab \tab }{\b\f2\fs28 Print show empty file}{\f2\fs20 
\par 
\par >^C\tab \tab \tab \tab }{\b\f2 CTRL C Break to monitor}{\f2\fs20 
\par B0AC,0
\par .\tab \tab \tab \tab }{\b\f2\fs28 View some memory}{\f2\fs20 
\par .V 200 0200 20 86 8B A9 3E 20 23 03,5E
\par  025E
\par .V 200,220 0200 20 86 8B A9 3E 20 23 03,5E
\par 0208 F0 08 A9 50 20 71 81 4C,AD
\par 0210 4E 91 A9 35 85 A2 A9 05,3F
\par 0218 85 A3 20 E8 92 B0 ED C9,67
\par 0220 01,68
\par  0E68
\par .
\par 
\par .G B003 \tab \tab \tab }{\b\f2\fs28 Warm start RAE}{\f2\fs20 
\par 1000-5000  5003-6EFC  6F00
\par 1000  0C00
\par >^C\tab \tab \tab \tab }{\b\f2\fs28 Back to monitor}{\f2\fs20 
\par B0AC,0
\par .
\par .G 200 \tab \tab \tab }{\b\f2\fs28 Run Catalog code still in memory
\par \tab \tab \tab \tab of FORTH Disk.  Numbered file names are
\par \tab \tab \tab \tab Forth screen numbers
\par }{\f2\fs20 
\par CATALOG V1.0
\par filename,unit -> *.*,1     FILENAME        EXT BLK  ADDRESS
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20   0             R/W  1  002 5B7E-5F7D
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20   1             R/W  1  002 5B7E-5F7D
\par   10            R/W  1  002 5B7E-5F7D
\par   12459         R/W  1  002 5B7E-5F7D
\par   14011         R/W  1  002 5B7E-5F7D
\par   16            R/W  1  002 5B7E-5F7D
\par   2             R/W  1  002 5B7E-5F7D
\par   3             R/W  1  002 5B7E-5F7D
\par   3023          R/W  1  002 5B7E-5F7D
\par   30395         R/W  1  002 5B7E-5F7D
\par   30FB          R/W  1  002 5B7E-5F7D
\par   32512         R/W  1  002 5B7E-5F7D
\par   32767         R/W  1  002 5B7E-5F7D
\par   36AB          R/W  1  002 5B7E-5F7D
\par   4             R/W  1  002 5B7E-5F7D
\par   5             R/W  1  002 5B7E-5F7D
\par   6             R/W  1  002 5B7E-5F7D
\par   6F00          R/W  1  002 5B7E-5F7D
\par   7             R/W  1  002 5B7E-5F7D
\par   8             R/W  1  002 5B7E-5F7D
\par   FLEXDISK      R/W  1  013 2000-4500
\par   FMT&CPY  OBJ  R/W  1  003 0200-086F
\par   LM334    OBJ  R/W  1  001 1000-1126
\par   LM334    RAE  R/W  1  004 2000-2BB9
\par   MX80A    OBJ  R/W  1  001 7000-7066
\par   MX80ACON RAE  R/W  1  001 0200-04B6
\par   SPECT    RAE  R/W  1  001 0200-03C3
\par   SPECTRUM      R/W  1  001 0201-0379
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20   SPECTRUM BAS  R/W  1  001 0201-0379
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 29 file(s) occupy 066 block(s)
\par 135 block(s) unoccupied
\par 
\par .
\par .L3  FLEXDISK,1 \tab \tab }{\b\f2\fs28 Load FORTH with disk I/O for this DOS}{\f2\fs20 
\par 
\par .G 2000 \tab \tab \tab }{\b\f2\fs28 Start FORTH address known by looing at 
\par \tab \tab \tab \tab disk catalog information}{\f2\fs20 
\par FLEX-FORTH  1.0
\par OK
\par 1 3 + .\tab \tab \tab }{\b\f2\fs28 Add two numbers and print in FORTH}{\f2\fs20 
\par 4 OK
\par 
\par OK\tab \tab \tab \tab }{\b\f2\fs28 Mutiply two numbers}{\f2\fs20 
\par 4 5 * .
\par 20 OK
\par VLIST\tab \tab \tab \tab }{\b\f2\fs28 List FORTH vocabulary
\par \tab \tab \tab \tab Notice something looks screwed up here
\par \tab \tab \tab \tab The data that was captured by HyperTerminal
\par \tab \tab \tab \tab to a disk file is shown directly below:}{\f2\fs20 
\par 
\par R/\'d7   R\'af   /\'d7   MAKENAM\'c5   GETDATA/\'d2   GETDATA/\'d7   S3CMD\'ab   L3CMD\'ab   
\par L\'b7   WHER\'c5   EDITO\'d2   LIN\'c5   TEX\'d4   COD\'c5   ASM-STAT\'c5   ASSEMBLE\'d2   
\par MO\'ce   VLIS\'d4   TRIA\'c4   INDE\'d8   LIS\'d4   \'bf   \'ae   .\'d2   D\'ae   D.\'d2   #\'d3   
\par \'a3   SIG\'ce   #\'be   <\'a3   SPACE\'d3   WHIL\'c5   ELS\'c5   I\'c6   REPEA\'d4   AGAI\'ce   
\par EN\'c4   UNTI\'cc   +LOO\'d0   LOO\'d0   D\'cf   THE\'ce   ENDI\'c6   BEGI\'ce   BAC\'cb   FORGE\'d4   
\par \'a7   R/\'d7   -TAP\'c5   --\'be   LOA\'c4   MESSAG\'c5   .LIN\'c5   (LINE\'a9   FLUS\'c8   
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 BLOC\'cb   BUFFE\'d2   DR\'b1   DR\'b0   EMPTY-BUFFER\'d3   UPDAT\'c5   M/MO\'c4   *\'af   
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 */MO\'c4   MO\'c4   \'af   /MO\'c4   \'aa   M\'af   M\'aa   MA\'d8   MI\'ce   DAB\'d3   AB\'d3   D+\-   
\par +\-   S->\'c4   COL\'c4   ABOR\'d4   QUI\'d4   \'a8   DEFINITION\'d3   FORT\'c8   VOCABULAR\'d9   
\par IMMEDIAT\'c5   INTERPRE\'d4   ?STAC\'cb   DLITERA\'cc   LITERA\'cc   [COMPILE\'dd   
\par CREAT\'c5   ID\'ae   ERRO\'d2   (ABORT\'a9   -FIN\'c4   NUMBE\'d2   (NUMBER\'a9   UPPE\'d2   
\par WOR\'c4   PA\'c4   HOL\'c4   BLANK\'d3   ERAS\'c5   FIL\'cc   \'80   QUER\'d9   EXPEC\'d4   
\par .\'a2   (."\'a9   -TRAILIN\'c7   TYP\'c5   COUN\'d4   DOES\'be   <BUILD\'d3   ;COD\'c5   
\par (;CODE\'a9   DECIMA\'cc   HE\'d8   SMUDG\'c5   \'dd   \'db   COMPIL\'c5   ?LOADIN\'c7   ?CS\'d0   
\par ?PAIR\'d3   ?EXE\'c3   ?COM\'d0   ?ERRO\'d2   !CS\'d0   PF\'c1   NF\'c1   CF\'c1   LF\'c1   
\par LATES\'d4   TRAVERS\'c5   -DU\'d0   SPAC\'c5   RO\'d4   \'be   \'bc   U\'bc   \'bd   \-   C\'ac   
\par \'ac   ALLO\'d4   HER\'c5   2\'ab   1\'ab   HL\'c4   R\'a3   CS\'d0   FL\'c4   DP\'cc   BAS\'c5   
\par STAT\'c5   CURREN\'d4   CONTEX\'d4   OFFSE\'d4   SC\'d2   OU\'d4   I\'ce   BL\'cb   VOC-LIN\'cb   
\par D\'d0   FENC\'c5   WARNIN\'c7   WIDT\'c8   TI\'c2   +ORIGI\'ce   B/SC\'d2   B/BU\'c6   LIMI\'d4   
\par FIRS\'d4   C/\'cc   B\'cc   \'b3   \'b2   \'b1   \'b0   USE\'d2   VARIABL\'c5   CONSTAN\'d4   \'bb   
\par \'ba   C\'a1   \'a1   C\'c0   \'c0   TOGGL\'c5   +\'a1   DU\'d0   SWA\'d0   DRO\'d0   OVE\'d2   DMINU\'d3   
\par MINU\'d3   D\'ab   \'ab   0\'bc   0\'bd   \'d2   R\'be   >\'d2   LEAV\'c5   ;\'d3   RP\'a1   SP\'a1   
\par SP\'c0   XO\'d2   O\'d2   AN\'c4   U\'af   U\'aa   CMOV\'c5   C\'d2   ?TERMINA\'cc   KE\'d9   EMI\'d4   
\par ENCLOS\'c5   (FIND\'a9   DIGI\'d4   \'c9   (DO\'a9   (+LOOP\'a9   (LOOP\'a9   0BRANC\'c8   
\par BRANC\'c8   EXECUT\'c5   CLI\'d4   LI\'d4   OK
\par 
\par OK
\par _
\par 
\par \tab \tab }{\b\f2\fs28 Now here is the exact same data, from the same
\par \tab \tab run taken from the HyperTerminal screen using 
\par \tab \tab Cut and Paste.  The following is the correct viewing
\par \tab \tab that was displayed using HyperTerminal.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 \tab \tab There is some bug in the process of using HyperTerminal
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f2\fs28 \tab \tab to capture output to a disk file.  The SYM operation is 
\par \tab \tab fine it probably has something to do with character sets
\par 
\par \tab \tab I just noticed this bug while preparing this example, so
\par \tab \tab I have not looked any further into it.  But for our purposes 
\par \tab \tab here, the following is the correct viewing of the FORTH vlist:}{\f2\fs20 
\par 
\par 
\par VLIST
\par 
\par R/   R   /   MAKENAM   GETDATA/   GETDATA/   S3CMD   L3CMD
\par L   WHER   EDITO   LIN   TEX   COD   ASM-STAT   ASSEMBLE
\par MO   VLIS   TRIA   INDE   LIS         .   D   D.   #
\par    SIG   #   <   SPACE   WHIL   ELS   I   REPEA   AGAI
\par EN   UNTI   +LOO   LOO   D   THE   ENDI   BEGI   BAC   FORGE
\par    R/   -TAP   --   LOA   MESSAG   .LIN   (LINE   FLUS
\par BLOC   BUFFE   DR   DR   EMPTY-BUFFER   UPDAT   M/MO   *
\par */MO   MO      /MO      M   M   MA   MI   DAB   AB   D+
\par +   S->   COL   ABOR   QUI      DEFINITION   FORT   VOCABULAR
\par IMMEDIAT   INTERPRE   ?STAC   DLITERA   LITERA   [COMPILE
\par CREAT   ID   ERRO   (ABORT   -FIN   NUMBE   (NUMBER   UPPE
\par WOR   PA   HOL   BLANK   ERAS   FIL      QUER   EXPEC
\par .   (."   -TRAILIN   TYP   COUN   DOES   <BUILD   ;COD
\par (;CODE   DECIMA   HE   SMUDG         COMPIL   ?LOADIN   ?CS
\par ?PAIR   ?EXE   ?COM   ?ERRO   !CS   PF   NF   CF   LF
\par LATES   TRAVERS   -DU   SPAC   RO         U         C
\par    ALLO   HER   2   1   HL   R   CS   FL   DP   BAS
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 STAT   CURREN   CONTEX   OFFSE   SC   OU   I   BL   VOC-LIN
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 D   FENC   WARNIN   WIDT   TI   +ORIGI   B/SC   B/BU   LIMI
\par FIRS   C/   B               USE   VARIABL   CONSTAN
\par    C      C      TOGGL   +   DU   SWA   DRO   OVE   DMINU
\par MINU   D      0   0      R   >   LEAV   ;   RP   SP
\par SP   XO   O   AN   U   U   CMOV   C   ?TERMINA   KE   EMI
\par ENCLOS   (FIND   DIGI      (DO   (+LOOP   (LOOP   0BRANC
\par BRANC   EXECUT   CLI   LI   OK
\par 
\par OK
\par 
\par }{\b\f2 \tab \tab }{\b\f2\fs28 I don't remember how to exit and re-enter FORTH, so I will
\par \tab \tab press the hardware reset back to the monitor.
\par }{\f2\fs20 
\par Q.
\par 
\par \tab \tab }{\b\f2\fs28 This example shows how well integrated the SYMDOS2 is to the 
\par \tab \tab SYM.  It is a pleasure to be able to jump back and forth between
\par \tab \tab the RAE, Monitor, Basic, Forth etc and issue disk commands without
\par \tab \tab having to constantly RESET and restart things.}{\f2\fs20 
\par }}